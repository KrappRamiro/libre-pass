\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZdq{}empleado.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZdq{}krapp\PYGZus{}utils.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}define SS\PYGZus{}PIN 5}
\PYG{c+cp}{\PYGZsh{}define RST\PYGZus{}PIN 21}
\PYG{c+cp}{\PYGZsh{}define SIZE\PYGZus{}BUFFER 18 }\PYG{c+c1}{// Este es el tamaño del buffer con el que voy a estar trabajando.}
\PYG{c+c1}{// Por que es 18? Porque son 16 bytes de los datos del tag, y 2 bytes de checksum}
\PYG{c+cp}{\PYGZsh{}define MAX\PYGZus{}SIZE\PYGZus{}BLOCK 16}
\PYG{c+cp}{\PYGZsh{}define greenPin 12}
\PYG{c+cp}{\PYGZsh{}define redPin 32}
\PYG{c+cm}{/* Se usa std::vector en reemplazo de usar `using namespace std` por una muy}
\PYG{c+cm}{buena razon, y es que se evita el namespace pollution. Si no sabes qué es eso,}
\PYG{c+cm}{te recomiendo personalmente este post,  es corto, sencillo, y bien explicado}
\PYG{c+cm}{para principiantes:}
\PYG{c+cm}{https://www.thecrazyprogrammer.com/2021/01/better\PYGZhy{}alternatives\PYGZhy{}for\PYGZhy{}using\PYGZhy{}namespace\PYGZhy{}std\PYGZhy{}in\PYGZhy{}c.html}
\PYG{c+cm}{*/}
\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}1}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}input1\PYGZdq{}}\PYG{p}{;}
\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}2}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}input2\PYGZdq{}}\PYG{p}{;}
\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}3}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}input3\PYGZdq{}}\PYG{p}{;}
\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{Empleado}\PYG{o}{::}\PYG{n}{cuentaEmpleados}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}

\PYG{c+c1}{// std::vector\PYGZlt{}Empleado\PYGZgt{} Empleados;}
\PYG{c+c1}{// Un array de empleados para almacenar múltiples empleados}
\PYG{c+c1}{// TODO cambiarlo por un vector}
\PYG{c+c1}{// Empleado misEmpleados[20];}
\PYG{n}{Empleado}\PYG{+w}{ }\PYG{n}{miEmpleado}\PYG{p}{;}

\PYG{c+c1}{//\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} INICIO DE Configuracion de conexion a internet \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{ssid}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Krapp\PYGZdq{}}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Nombre de la red}
\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{password}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}yougotit\PYGZdq{}}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Contraseña de la red}

\PYG{c+c1}{// const char* ssid = \PYGZdq{}TeleCentro\PYGZhy{}882b\PYGZdq{};}
\PYG{c+c1}{// const char* password = \PYGZdq{}ZGNJVMMHZ2MY\PYGZdq{};}

\PYG{n}{AsyncWebServer}\PYG{+w}{ }\PYG{n+nf}{server}\PYG{p}{(}\PYG{l+m+mi}{80}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Inicio el web server en el puerto 80}
\PYG{c+c1}{// Create an Event Source on /events}
\PYG{n}{AsyncEventSource}\PYG{+w}{ }\PYG{n+nf}{events}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/events\PYGZdq{}}\PYG{p}{);}
\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} FIN DE Configuracion de conexion a internet \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} INICIO DE Configuracion de servidor NTP \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{c+c1}{// Un servidor NTP es un servidor que se encarga de obtener la fecha y hora actual}
\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{ntpServer}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}pool.ntp.org\PYGZdq{}}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// NTP server pool}
\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{long}\PYG{+w}{ }\PYG{n}{gmtOffset\PYGZus{}sec}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// GMT offset in seconds}
\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{daylightOffset\PYGZus{}sec}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{3600}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// daylight saving offset in seconds}
\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} FIN DE Configuracion de servidor NTP \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{c+c1}{//  \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} INICIO DE Variables del MFRC552 \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{c+c1}{// key es una variable que se va a usar a lo largo de todo el codigo}
\PYG{n}{MFRC522}\PYG{o}{::}\PYG{n}{MIFARE\PYGZus{}Key}\PYG{+w}{ }\PYG{n}{key}\PYG{p}{;}
\PYG{c+c1}{// Status es el codigo de estado de autenticacion}
\PYG{n}{MFRC522}\PYG{o}{::}\PYG{n}{StatusCode}\PYG{+w}{ }\PYG{n}{status}\PYG{p}{;}
\PYG{c+c1}{// Defino los pines que van al modulo RC552}
\PYG{n}{MFRC522}\PYG{+w}{ }\PYG{n+nf}{mfrc522}\PYG{p}{(}\PYG{n}{SS\PYGZus{}PIN}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{RST\PYGZus{}PIN}\PYG{p}{);}
\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} FIN DE Variables del MFRC552 \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{createEmployee}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{c+cm}{/*}
\PYG{c+cm}{	Esta funcion crea un empleado en la lista de empleados}
\PYG{c+cm}{	Args:}
\PYG{c+cm}{		None}
\PYG{c+cm}{	Returns:}
\PYG{c+cm}{		None}
\PYG{c+cm}{	*/}
\PYG{+w}{	}\PYG{c+c1}{//	Empleado* temp = new Empleado(}
\PYG{+w}{	}\PYG{c+c1}{//		getSerialStringInput(),}
\PYG{+w}{	}\PYG{c+c1}{//		getSerialStringInput(),}
\PYG{+w}{	}\PYG{c+c1}{//		4,}
\PYG{+w}{	}\PYG{c+c1}{//		getSerialStringInput());}
\PYG{+w}{	}\PYG{c+c1}{// misEmpleados[0] = Empleado(}
\PYG{+w}{	}\PYG{n}{miEmpleado}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{Empleado}\PYG{p}{(}\PYG{+w}{ }\PYG{c+c1}{// Creo un empleado}
\PYG{+w}{		}\PYG{n}{getSerialStringInput}\PYG{p}{(),}\PYG{+w}{ }\PYG{c+c1}{// Nombre}
\PYG{+w}{		}\PYG{n}{getSerialStringInput}\PYG{p}{(),}\PYG{+w}{ }\PYG{c+c1}{// DNI}
\PYG{+w}{		}\PYG{l+m+mi}{4}\PYG{p}{,}\PYG{+w}{ }\PYG{c+c1}{// Nivel de autorizacion}
\PYG{+w}{		}\PYG{n}{getSerialStringInput}\PYG{p}{());}\PYG{+w}{ }\PYG{c+c1}{// Cargo administrativo}
\PYG{p}{\PYGZcb{}}
\PYG{c+cp}{\PYGZsh{}pragma region }\PYG{c+c1}{// esto es exclusivo de vscode, no afecta al compilador, me permite contraer y expandir}
\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{+w}{ }\PYG{n}{index\PYGZus{}html}\PYG{p}{[]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s+sa}{R}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+dl}{rawliteral(}
\PYG{l+s}{\PYGZlt{}!DOCTYPE html\PYGZgt{}}
\PYG{l+s}{\PYGZlt{}html\PYGZgt{}}
\PYG{l+s}{	\PYGZlt{}head\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}meta name=\PYGZdq{}viewport\PYGZdq{} content=\PYGZdq{}width=device\PYGZhy{}width, initial\PYGZhy{}scale=1\PYGZdq{} /\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}link}
\PYG{l+s}{			rel=\PYGZdq{}stylesheet\PYGZdq{}}
\PYG{l+s}{			href=\PYGZdq{}https://use.fontawesome.com/releases/v5.7.2/css/all.css\PYGZdq{}}
\PYG{l+s}{			integrity=\PYGZdq{}sha384\PYGZhy{}fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\PYGZdq{}}
\PYG{l+s}{			crossorigin=\PYGZdq{}anonymous\PYGZdq{}}
\PYG{l+s}{		/\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}style\PYGZgt{}}
\PYG{l+s}{			html \PYGZob{}}
\PYG{l+s}{				font\PYGZhy{}family: Arial;}
\PYG{l+s}{				display: inline\PYGZhy{}block;}
\PYG{l+s}{				margin: 0px auto;}
\PYG{l+s}{				text\PYGZhy{}align: left;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{			h2 \PYGZob{}}
\PYG{l+s}{				font\PYGZhy{}size: 3rem;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{			p \PYGZob{}}
\PYG{l+s}{				font\PYGZhy{}size: 3rem;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{			.units \PYGZob{}}
\PYG{l+s}{				font\PYGZhy{}size: 1.2rem;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{			.dht\PYGZhy{}labels \PYGZob{}}
\PYG{l+s}{				font\PYGZhy{}size: 1.5rem;}
\PYG{l+s}{				vertical\PYGZhy{}align: middle;}
\PYG{l+s}{				padding\PYGZhy{}bottom: 15px;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{			.user\PYGZhy{}input \PYGZob{}}
\PYG{l+s}{				display: block;}
\PYG{l+s}{				margin: 10px;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{		\PYGZlt{}/style\PYGZgt{}}
\PYG{l+s}{	\PYGZlt{}/head\PYGZgt{}}
\PYG{l+s}{	\PYGZlt{}body\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}h2\PYGZgt{}ESP32 Librepass WebServer\PYGZlt{}/h2\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}p\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}i class=\PYGZdq{}fas fa\PYGZhy{}thermometer\PYGZhy{}half\PYGZdq{} style=\PYGZdq{}color: \PYGZsh{}059e8a\PYGZdq{}\PYGZgt{}\PYGZlt{}/i\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span class=\PYGZdq{}dht\PYGZhy{}labels\PYGZdq{}\PYGZgt{}Temperature is: \PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span id=\PYGZdq{}temperature\PYGZhy{}el\PYGZdq{}\PYGZgt{}\PYGZpc{}TEMPERATURE\PYGZpc{}\PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}sup class=\PYGZdq{}units\PYGZdq{}\PYGZgt{}\PYGZam{}deg;C\PYGZlt{}/sup\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}/p\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}p\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}i class=\PYGZdq{}fas fa\PYGZhy{}tint\PYGZdq{} style=\PYGZdq{}color: \PYGZsh{}00add6\PYGZdq{}\PYGZgt{}\PYGZlt{}/i\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span class=\PYGZdq{}dht\PYGZhy{}labels\PYGZdq{}\PYGZgt{}Humidity is: \PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span id=\PYGZdq{}humidity\PYGZhy{}el\PYGZdq{}\PYGZgt{}\PYGZpc{}HUMIDITY\PYGZpc{}\PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}sup class=\PYGZdq{}units\PYGZdq{}\PYGZgt{}\PYGZam{}percnt;\PYGZlt{}/sup\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}/p\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}p\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}i class=\PYGZdq{}fa\PYGZhy{}solid fa\PYGZhy{}clock\PYGZdq{}\PYGZgt{}\PYGZlt{}/i\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span class=\PYGZdq{}dht\PYGZhy{}labels\PYGZdq{}\PYGZgt{}Date and hour is: \PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span id=\PYGZdq{}date\PYGZhy{}hour\PYGZhy{}el\PYGZdq{}\PYGZgt{}\PYGZpc{}DATE\PYGZhy{}HOUR\PYGZpc{}\PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}/p\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}p\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span class=\PYGZdq{}dht\PYGZhy{}labels\PYGZdq{}\PYGZgt{}Se leyo? :\PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span id=\PYGZdq{}rfid\PYGZhy{}uid\PYGZhy{}el\PYGZdq{}\PYGZgt{}\PYGZpc{}rfid\PYGZhy{}uid\PYGZpc{}\PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}/p\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}!\PYGZhy{}\PYGZhy{} User input \PYGZhy{}\PYGZhy{}\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}!\PYGZhy{}\PYGZhy{}}
\PYG{l+s}{		\PYGZlt{}label for=\PYGZdq{}name\PYGZhy{}input\PYGZhy{}el\PYGZdq{}\PYGZgt{}Nombre:\PYGZlt{}/label\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}input}
\PYG{l+s}{			type=\PYGZdq{}text\PYGZdq{}}
\PYG{l+s}{			name=\PYGZdq{}name\PYGZhy{}input\PYGZhy{}el\PYGZdq{}}
\PYG{l+s}{			class=\PYGZdq{}user\PYGZhy{}input\PYGZdq{}}
\PYG{l+s}{			id=\PYGZdq{}name\PYGZhy{}input\PYGZhy{}el\PYGZdq{}}
\PYG{l+s}{		/\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}label for=\PYGZdq{}dni\PYGZhy{}input\PYGZhy{}el\PYGZdq{}\PYGZgt{}\PYGZlt{}/label\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}input}
\PYG{l+s}{			type=\PYGZdq{}text\PYGZdq{}}
\PYG{l+s}{			name=\PYGZdq{}dni\PYGZhy{}input\PYGZhy{}el\PYGZdq{}}
\PYG{l+s}{			class=\PYGZdq{}user\PYGZhy{}input\PYGZdq{}}
\PYG{l+s}{			id=\PYGZdq{}dni\PYGZhy{}input\PYGZhy{}el\PYGZdq{}}
\PYG{l+s}{		/\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}label for=\PYGZdq{}clearance\PYGZhy{}level\PYGZhy{}input\PYGZhy{}el\PYGZdq{}\PYGZgt{}\PYGZlt{}/label\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}input}
\PYG{l+s}{			type=\PYGZdq{}text\PYGZdq{}}
\PYG{l+s}{			name=\PYGZdq{}clearance\PYGZhy{}level\PYGZhy{}input\PYGZhy{}el\PYGZdq{}}
\PYG{l+s}{			class=\PYGZdq{}user\PYGZhy{}input\PYGZdq{}}
\PYG{l+s}{			id=\PYGZdq{}clearance\PYGZhy{}level\PYGZhy{}input\PYGZhy{}el\PYGZdq{}}
\PYG{l+s}{		/\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}label for=\PYGZdq{}cargo\PYGZhy{}administrativo\PYGZhy{}input\PYGZhy{}el\PYGZdq{}\PYGZgt{}\PYGZlt{}/label\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}input}
\PYG{l+s}{			type=\PYGZdq{}text\PYGZdq{}}
\PYG{l+s}{			name=\PYGZdq{}cargo\PYGZhy{}administrativo\PYGZhy{}input\PYGZhy{}el\PYGZdq{}}
\PYG{l+s}{			class=\PYGZdq{}user\PYGZhy{}input\PYGZdq{}}
\PYG{l+s}{			id=\PYGZdq{}cargo\PYGZhy{}administrativo\PYGZhy{}input\PYGZhy{}el\PYGZdq{}}
\PYG{l+s}{		/\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}button id=\PYGZdq{}save\PYGZhy{}input\PYGZhy{}btn\PYGZdq{}\PYGZgt{}SAVE INPUT\PYGZlt{}/button\PYGZgt{}}
\PYG{l+s}{		\PYGZhy{}\PYGZhy{}\PYGZgt{}}

\PYG{l+s}{		\PYGZlt{}form action=\PYGZdq{}/get\PYGZdq{}\PYGZgt{}}
\PYG{l+s}{			input1: \PYGZlt{}input type=\PYGZdq{}text\PYGZdq{} name=\PYGZdq{}input1\PYGZdq{} /\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}input type=\PYGZdq{}submit\PYGZdq{} value=\PYGZdq{}Submit\PYGZdq{} /\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}/form\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}br /\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}form action=\PYGZdq{}/get\PYGZdq{}\PYGZgt{}}
\PYG{l+s}{			input2: \PYGZlt{}input type=\PYGZdq{}text\PYGZdq{} name=\PYGZdq{}input2\PYGZdq{} /\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}input type=\PYGZdq{}submit\PYGZdq{} value=\PYGZdq{}Submit\PYGZdq{} /\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}/form\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}br /\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}form action=\PYGZdq{}/get\PYGZdq{}\PYGZgt{}}
\PYG{l+s}{			input3: \PYGZlt{}input type=\PYGZdq{}text\PYGZdq{} name=\PYGZdq{}input3\PYGZdq{} /\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}input type=\PYGZdq{}submit\PYGZdq{} value=\PYGZdq{}Submit\PYGZdq{} /\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}/form\PYGZgt{}}
\PYG{l+s}{	\PYGZlt{}/body\PYGZgt{}}

\PYG{l+s}{	\PYGZlt{}script\PYGZgt{}}
\PYG{l+s}{		const saveInputBtn = document.getElementById(\PYGZdq{}save\PYGZhy{}input\PYGZhy{}btn\PYGZdq{});}

\PYG{l+s}{		// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} INICIO DE Eventos \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s}{		if (!!window.EventSource) \PYGZob{}}
\PYG{l+s}{			//A partir de aca van todos los eventos del ESP32:}
\PYG{l+s}{			var source = new EventSource(\PYGZdq{}/events\PYGZdq{});}
\PYG{l+s}{			source.addEventListener(\PYGZdq{}open\PYGZdq{}, function (e) \PYGZob{}}
\PYG{l+s}{				console.log(\PYGZdq{}Events Connected\PYGZdq{});}
\PYG{l+s}{			\PYGZcb{});}
\PYG{l+s}{			//Evento que se ejecuta cada vez que se recibe un error}
\PYG{l+s}{			source.addEventListener(\PYGZdq{}error\PYGZdq{}, function (e) \PYGZob{}}
\PYG{l+s}{				if (e.target.readyState != EventSource.OPEN) \PYGZob{}}
\PYG{l+s}{					console.log(\PYGZdq{}Events Disconnected\PYGZdq{});}
\PYG{l+s}{				\PYGZcb{}}
\PYG{l+s}{			\PYGZcb{});}
\PYG{l+s}{			// Evento que se ejecuta cada vez que se recibe un mensaje cualquiera}
\PYG{l+s}{			source.addEventListener(\PYGZdq{}message\PYGZdq{}, function (e) \PYGZob{}}
\PYG{l+s}{				console.log(\PYGZdq{}message\PYGZdq{}, e.data);}
\PYG{l+s}{			\PYGZcb{});}
\PYG{l+s}{			// Evento que se ejecuta cada vez que se recibe una lectura del rfid}
\PYG{l+s}{			source.addEventListener(\PYGZdq{}rfidReadEvent\PYGZdq{}, function (e) \PYGZob{}}
\PYG{l+s}{				console.log(\PYGZdq{}rfidReadEvent\PYGZdq{}, e.data);}
\PYG{l+s}{				document.getElementById(\PYGZdq{}rfid\PYGZhy{}uid\PYGZhy{}el\PYGZdq{}).innerHTML = e.data;}
\PYG{l+s}{			\PYGZcb{});}
\PYG{l+s}{		\PYGZcb{}}
\PYG{l+s}{		// Creo que aca van los eventos de la propia pagina web}
\PYG{l+s}{		saveInputBtn.addEventListener(\PYGZdq{}click\PYGZdq{}, function () \PYGZob{}}
\PYG{l+s}{			const person = \PYGZob{}}
\PYG{l+s}{				name: document.getElementById(\PYGZdq{}name\PYGZhy{}input\PYGZhy{}el\PYGZdq{}).value,}
\PYG{l+s}{				dni: document.getElementById(\PYGZdq{}dni\PYGZhy{}input\PYGZhy{}el\PYGZdq{}).value,}
\PYG{l+s}{				clearanceLevel: document.getElementById(\PYGZdq{}clearance\PYGZhy{}level\PYGZhy{}input\PYGZhy{}el\PYGZdq{})}
\PYG{l+s}{					.value,}
\PYG{l+s}{				cargoAdministrativo: document.getElementById(}
\PYG{l+s}{					\PYGZdq{}cargo\PYGZhy{}administrativo\PYGZhy{}input\PYGZhy{}el\PYGZdq{}}
\PYG{l+s}{				).value,}
\PYG{l+s}{			\PYGZcb{};}
\PYG{l+s}{			console.log(\PYGZdq{}Read the following things:\PYGZdq{}); //log the saved lead}
\PYG{l+s}{			console.dir(person);}
\PYG{l+s}{		\PYGZcb{});}

\PYG{l+s}{		// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} FIN DE Eventos \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{l+s}{		// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} INICIO DE Intervalos \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s}{		// Intervalo de temperatura}
\PYG{l+s}{		setInterval(function () \PYGZob{}}
\PYG{l+s}{			var xhttp = new XMLHttpRequest();}
\PYG{l+s}{			xhttp.onreadystatechange = function () \PYGZob{}}
\PYG{l+s}{				if (this.readyState == 4 \PYGZam{}\PYGZam{} this.status == 200) \PYGZob{}}
\PYG{l+s}{					document.getElementById(\PYGZdq{}temperature\PYGZhy{}el\PYGZdq{}).innerHTML =}
\PYG{l+s}{						this.responseText;}
\PYG{l+s}{				\PYGZcb{}}
\PYG{l+s}{			\PYGZcb{};}
\PYG{l+s}{			xhttp.open(\PYGZdq{}GET\PYGZdq{}, \PYGZdq{}/temperature\PYGZdq{}, true); //esto llama al server.on() correspondiente}
\PYG{l+s}{			console.log(\PYGZdq{}Updating temperature\PYGZdq{});}
\PYG{l+s}{			xhttp.send();}
\PYG{l+s}{		\PYGZcb{}, 3000);}
\PYG{l+s}{		// Intervalo de humedad}
\PYG{l+s}{		setInterval(function () \PYGZob{}}
\PYG{l+s}{			var xhttp = new XMLHttpRequest();}
\PYG{l+s}{			xhttp.onreadystatechange = function () \PYGZob{}}
\PYG{l+s}{				if (this.readyState == 4 \PYGZam{}\PYGZam{} this.status == 200) \PYGZob{}}
\PYG{l+s}{					document.getElementById(\PYGZdq{}humidity\PYGZhy{}el\PYGZdq{}).innerHTML = this.responseText;}
\PYG{l+s}{				\PYGZcb{}}
\PYG{l+s}{			\PYGZcb{};}
\PYG{l+s}{			xhttp.open(\PYGZdq{}GET\PYGZdq{}, \PYGZdq{}/humidity\PYGZdq{}, true); //esto llama al server.on() correspondiente}
\PYG{l+s}{			console.log(\PYGZdq{}updating humidity\PYGZdq{});}
\PYG{l+s}{			xhttp.send();}
\PYG{l+s}{		\PYGZcb{}, 3000);}
\PYG{l+s}{		// Intervalo de fecha y hora}
\PYG{l+s}{		setInterval(function () \PYGZob{}}
\PYG{l+s}{			var xhttp = new XMLHttpRequest();}
\PYG{l+s}{			xhttp.onreadystatechange = function () \PYGZob{}}
\PYG{l+s}{				if (this.readyState == 4 \PYGZam{}\PYGZam{} this.status == 200) \PYGZob{}}
\PYG{l+s}{					document.getElementById(\PYGZdq{}date\PYGZhy{}hour\PYGZhy{}el\PYGZdq{}).innerHTML = this.responseText;}
\PYG{l+s}{				\PYGZcb{}}
\PYG{l+s}{			\PYGZcb{};}
\PYG{l+s}{			xhttp.open(\PYGZdq{}GET\PYGZdq{}, \PYGZdq{}/date\PYGZhy{}hour\PYGZdq{}, true); //esto llama al server.on() correspondiente}
\PYG{l+s}{			console.log(\PYGZdq{}updating date\PYGZhy{}hour\PYGZdq{});}
\PYG{l+s}{			xhttp.send();}
\PYG{l+s}{		\PYGZcb{}, 3000);}
\PYG{l+s}{		// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} FIN DE Intervalos \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s}{	\PYGZlt{}/script\PYGZgt{}}
\PYG{l+s}{\PYGZlt{}/html\PYGZgt{}}
\PYG{l+s+dl}{)rawliteral}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
\PYG{c+cp}{\PYGZsh{}pragma endregion}
\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{setup}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{(}\PYG{l+m+mi}{9600}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{SPI}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{();}\PYG{+w}{ }\PYG{c+c1}{// Inicio el bus SPI}
\PYG{+w}{	}\PYG{n}{Log}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{(}\PYG{n}{LOG\PYGZus{}LEVEL\PYGZus{}NOTICE}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{Serial}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Inicio del sistema de logging}

\PYG{+w}{	}\PYG{c+c1}{// Prendo el led de la placa cuando inicia el sistema}
\PYG{+w}{	}\PYG{n}{pinMode}\PYG{p}{(}\PYG{n}{LED\PYGZus{}BUILTIN}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{OUTPUT}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{LED\PYGZus{}BUILTIN}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HIGH}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{1000}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{LED\PYGZus{}BUILTIN}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{LOW}\PYG{p}{);}

\PYG{+w}{	}\PYG{c+c1}{// Me conecto a internet mediante Wi\PYGZhy{}Fi}
\PYG{+w}{	}\PYG{n}{WiFi}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{(}\PYG{n}{ssid}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{password}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{while}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{WiFi}\PYG{p}{.}\PYG{n}{status}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{WL\PYGZus{}CONNECTED}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{1000}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Connecting to WiFi..\PYGZdq{}}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{c+c1}{// Imprimo la IP local del ESP32 (192.168.x.x)}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{WiFi}\PYG{p}{.}\PYG{n}{localIP}\PYG{p}{());}

\PYG{+w}{	}\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} INICIO DE Rutas del servidor \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{+w}{	}\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} GET\PYGZsq{}s}
\PYG{+w}{	}\PYG{c+c1}{// Ruta para el index.html}
\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{on}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HTTP\PYGZus{}GET}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[](}\PYG{n}{AsyncWebServerRequest}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{request}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{send\PYGZus{}P}\PYG{p}{(}\PYG{l+m+mi}{200}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}text/html\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{index\PYGZus{}html}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{processor}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{});}
\PYG{+w}{	}\PYG{c+c1}{// Ruta para la temperatura}
\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{on}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/temperature\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HTTP\PYGZus{}GET}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[](}\PYG{n}{AsyncWebServerRequest}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{request}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{send\PYGZus{}P}\PYG{p}{(}\PYG{l+m+mi}{200}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}text/plain\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{String}\PYG{p}{(}\PYG{n}{random}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{50}\PYG{p}{)).}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
\PYG{+w}{	}\PYG{p}{\PYGZcb{});}
\PYG{+w}{	}\PYG{c+c1}{// Ruta para la humedad}
\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{on}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/humidity\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HTTP\PYGZus{}GET}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[](}\PYG{n}{AsyncWebServerRequest}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{request}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{send\PYGZus{}P}\PYG{p}{(}\PYG{l+m+mi}{200}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}text/plain\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{String}\PYG{p}{(}\PYG{n}{random}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{50}\PYG{p}{)).}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
\PYG{+w}{	}\PYG{p}{\PYGZcb{});}
\PYG{+w}{	}\PYG{c+c1}{// Ruta para la fecha y hora}
\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{on}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/date\PYGZhy{}hour\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HTTP\PYGZus{}GET}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[](}\PYG{n}{AsyncWebServerRequest}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{request}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{send\PYGZus{}P}\PYG{p}{(}\PYG{l+m+mi}{200}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}text/plain\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{String}\PYG{p}{(}\PYG{n}{getDateTime}\PYG{p}{()).}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
\PYG{+w}{	}\PYG{p}{\PYGZcb{});}

\PYG{+w}{	}\PYG{c+c1}{// Send a GET request to \PYGZlt{}ESP\PYGZus{}IP\PYGZgt{}/get?input=X\PYGZlt{}inputMessage\PYGZgt{}}
\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{on}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/get\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HTTP\PYGZus{}GET}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[](}\PYG{n}{AsyncWebServerRequest}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{request}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{inputMessage}\PYG{p}{;}
\PYG{+w}{		}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{inputParam}\PYG{p}{;}
\PYG{+w}{		}\PYG{c+c1}{// GET input1 value on \PYGZlt{}ESP\PYGZus{}IP\PYGZgt{}/get?input1=\PYGZlt{}inputMessage\PYGZgt{}}
\PYG{+w}{		}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{hasParam}\PYG{p}{(}\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}1}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{			}\PYG{n}{inputMessage}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{getParam}\PYG{p}{(}\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}1}\PYG{p}{)}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value}\PYG{p}{();}
\PYG{+w}{			}\PYG{n}{inputParam}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}1}\PYG{p}{;}
\PYG{+w}{		}\PYG{p}{\PYGZcb{}}
\PYG{+w}{		}\PYG{c+c1}{// GET input2 value on \PYGZlt{}ESP\PYGZus{}IP\PYGZgt{}/get?input2=\PYGZlt{}inputMessage\PYGZgt{}}
\PYG{+w}{		}\PYG{k}{else}\PYG{+w}{ }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{hasParam}\PYG{p}{(}\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}2}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{			}\PYG{n}{inputMessage}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{getParam}\PYG{p}{(}\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}2}\PYG{p}{)}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value}\PYG{p}{();}
\PYG{+w}{			}\PYG{n}{inputParam}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}2}\PYG{p}{;}
\PYG{+w}{		}\PYG{p}{\PYGZcb{}}
\PYG{+w}{		}\PYG{c+c1}{// GET input3 value on \PYGZlt{}ESP\PYGZus{}IP\PYGZgt{}/get?input3=\PYGZlt{}inputMessage\PYGZgt{}}
\PYG{+w}{		}\PYG{k}{else}\PYG{+w}{ }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{hasParam}\PYG{p}{(}\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}3}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{			}\PYG{n}{inputMessage}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{getParam}\PYG{p}{(}\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}3}\PYG{p}{)}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value}\PYG{p}{();}
\PYG{+w}{			}\PYG{n}{inputParam}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{PARAM\PYGZus{}INPUT\PYGZus{}3}\PYG{p}{;}
\PYG{+w}{		}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{k}{else}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{			}\PYG{n}{inputMessage}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}No message sent\PYGZdq{}}\PYG{p}{;}
\PYG{+w}{			}\PYG{n}{inputParam}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}none\PYGZdq{}}\PYG{p}{;}
\PYG{+w}{		}\PYG{p}{\PYGZcb{}}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{inputMessage}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{send}\PYG{p}{(}\PYG{l+m+mi}{204}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{});}

\PYG{+w}{	}\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} Eventos}
\PYG{+w}{	}\PYG{n}{events}\PYG{p}{.}\PYG{n}{onConnect}\PYG{p}{([](}\PYG{n}{AsyncEventSourceClient}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{client}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{client}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{lastId}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{			}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Client reconnected! Last message ID that it got is: \PYGZpc{}u}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{client}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{lastId}\PYG{p}{());}
\PYG{+w}{		}\PYG{p}{\PYGZcb{}}
\PYG{+w}{		}\PYG{c+c1}{// send event with message \PYGZdq{}hello!\PYGZdq{}, id current millis}
\PYG{+w}{		}\PYG{c+c1}{// and set reconnect delay to 1 second}
\PYG{+w}{		}\PYG{n}{client}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{send}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}hello!\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{NULL}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{millis}\PYG{p}{(),}\PYG{+w}{ }\PYG{l+m+mi}{10000}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{});}

\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{addHandler}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{events}\PYG{p}{);}
\PYG{+w}{	}\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} FIN DE Rutas del servidor \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{();}
\PYG{+w}{	}\PYG{c+c1}{// Cosas del ntp server para la fecha/hora}
\PYG{+w}{	}\PYG{n}{configTime}\PYG{p}{(}\PYG{n}{gmtOffset\PYGZus{}sec}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{daylightOffset\PYGZus{}sec}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{ntpServer}\PYG{p}{);}
\PYG{+w}{	}\PYG{c+c1}{// Inicio el MFRC552}
\PYG{+w}{	}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PCD\PYGZus{}Init}\PYG{p}{();}
\PYG{+w}{	}\PYG{c+c1}{// Le pido al usuario que acerque el tag RFID}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Acerca tu tarjeta RFID}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{));}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{loop}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} INICIO DEL LECTOR RFID \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{+w}{	}\PYG{c+c1}{// Se espera a que se acerque un tag}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PICC\PYGZus{}IsNewCardPresent}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{c+c1}{// Se espera a que se lean los datos}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PICC\PYGZus{}ReadCardSerial}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{c+c1}{// Descomentar solamente si se quiere Dumpear toda la info acerca de la tarjeta leida, ojo que llama automaticamente a PICC\PYGZus{}HaltA()}
\PYG{+w}{	}\PYG{c+c1}{// mfrc522.PICC\PYGZus{}DumpToSerial(\PYGZam{}(mfrc522.uid));}

\PYG{+w}{	}\PYG{c+c1}{// Le digo al servidor que se leyo el tag RFID}
\PYG{+w}{	}\PYG{n}{events}\PYG{p}{.}\PYG{n}{send}\PYG{p}{(}\PYG{n}{getUID}\PYG{p}{(}\PYG{n}{mfrc522}\PYG{p}{).}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}rfidReadEvent\PYGZdq{}}\PYG{p}{);}
\PYG{+w}{	}\PYG{c+cm}{/*}
\PYG{c+cm}{	// LLama a la funcion de menu para que el usuario elija una opcion}
\PYG{c+cm}{	int op = menu();}
\PYG{c+cm}{	if (op == 0)}
\PYG{c+cm}{		readingData();}
\PYG{c+cm}{	else if (op == 1) \PYGZob{}}
\PYG{c+cm}{		// crear empleado}
\PYG{c+cm}{		createEmployee();}
\PYG{c+cm}{	\PYGZcb{} else if (op == 2) \PYGZob{}}
\PYG{c+cm}{		// leer info del primer empleado}
\PYG{c+cm}{		Serial.print(\PYGZdq{}\PYGZbs{}nThe employee name is: \PYGZdq{});}
\PYG{c+cm}{		// Serial.print(misEmpleados[0].getName());}
\PYG{c+cm}{		Serial.print(miEmpleado.getName());}
\PYG{c+cm}{	\PYGZcb{}}

\PYG{c+cm}{	else \PYGZob{}}
\PYG{c+cm}{		Serial.println(F(\PYGZdq{}Incorrect Option!\PYGZdq{}));}
\PYG{c+cm}{		return;}
\PYG{c+cm}{	\PYGZcb{}}
\PYG{c+cm}{	*/}

\PYG{+w}{	}\PYG{c+c1}{// Le dice al PICC que se vaya a un estado de STOP cuando esta activo (o sea, lo haltea)}
\PYG{+w}{	}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PICC\PYGZus{}HaltA}\PYG{p}{();}

\PYG{+w}{	}\PYG{c+c1}{// Esto \PYGZdq{}para\PYGZdq{} la encriptación del PCD (proximity coupling device).}
\PYG{+w}{	}\PYG{c+c1}{// Tiene que ser llamado si o si despues de la comunicacion con una}
\PYG{+w}{	}\PYG{c+c1}{// autenticación exitosa, en otro caso no se va a poder iniciar otra comunicación.}
\PYG{+w}{	}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PCD\PYGZus{}StopCrypto1}\PYG{p}{();}
\PYG{+w}{	}\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} FIN DEL LECTOR RFID \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
