\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}Arduino.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}ArduinoLog.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}MFRC522.h\PYGZgt{}}\PYG{c+c1}{ //library responsible for communicating with the module RFID\PYGZhy{}RC522}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}SPI.h\PYGZgt{}}\PYG{c+c1}{ //library responsible for communicating of SPI bus}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}iostream\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}vector\PYGZgt{}}

\PYG{c+cp}{\PYGZsh{}ifdef ESP32}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}AsyncTCP.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}WiFi.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}elif defined(ESP8266)}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}ESP8266WiFi.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}ESPAsyncTCP.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}endif}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}ESPAsyncWebServer.h\PYGZgt{}}

\PYG{c+cp}{\PYGZsh{}define SS\PYGZus{}PIN 5}
\PYG{c+cp}{\PYGZsh{}define RST\PYGZus{}PIN 21}
\PYG{c+cp}{\PYGZsh{}define SIZE\PYGZus{}BUFFER 18 }\PYG{c+c1}{// Este es el tamaño del buffer con el que voy a estar trabajando.}
\PYG{c+c1}{// Por que es 18? Porque son 16 bytes de los datos del tag, y 2 bytes de checksum}
\PYG{c+cp}{\PYGZsh{}define MAX\PYGZus{}SIZE\PYGZus{}BLOCK 16}
\PYG{c+cp}{\PYGZsh{}define greenPin 12}
\PYG{c+cp}{\PYGZsh{}define redPin 32}
\PYG{c+cm}{/* Se usa std::vector en reemplazo de usar `using namespace std` por una muy}
\PYG{c+cm}{buena razon, y es que se evita el namespace pollution. Si no sabes qué es eso,}
\PYG{c+cm}{te recomiendo personalmente este post,  es corto, sencillo, y bien explicado}
\PYG{c+cm}{para principiantes:}
\PYG{c+cm}{https://www.thecrazyprogrammer.com/2021/01/better\PYGZhy{}alternatives\PYGZhy{}for\PYGZhy{}using\PYGZhy{}namespace\PYGZhy{}std\PYGZhy{}in\PYGZhy{}c.html}
\PYG{c+cm}{*/}
\PYG{k}{class}\PYG{+w}{ }\PYG{n+nc}{Empleado}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{c+cm}{/*}
\PYG{c+cm}{		Si alguien se pregunta por qué, en las clases, las variables estan en private,}
\PYG{c+cm}{		la respuesta es muy sencilla:}
\PYG{c+cm}{		Es porque no se desea que se modifiquen las variables de forma manual.}
\PYG{c+cm}{		Esto es porque esa práctica es propensa a errores, ya que se podría introducir}
\PYG{c+cm}{		un valor inadecuado y generar algun problema.}

\PYG{c+cm}{		Por eso se usan funciones public, normalmente llamadas setters, que permiten}
\PYG{c+cm}{		asignar y leer los valores, y que establecen un margen de valores seguros.}
\PYG{c+cm}{	*/}
\PYG{k}{private}\PYG{o}{:}
\PYG{+w}{	}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{name}\PYG{p}{;}
\PYG{+w}{	}\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n}{isAlive}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nb}{true}\PYG{p}{;}
\PYG{+w}{	}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{dni}\PYG{p}{;}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{clearanceLevel}\PYG{p}{;}
\PYG{+w}{	}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{cargoAdministrativo}\PYG{p}{;}

\PYG{k}{public}\PYG{o}{:}
\PYG{+w}{	}\PYG{k}{static}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{cuentaEmpleados}\PYG{p}{;}
\PYG{+w}{	}\PYG{c+c1}{// Constructor lleno}
\PYG{+w}{	}\PYG{n}{Empleado}\PYG{p}{(}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{name}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{String}\PYG{+w}{ }\PYG{n}{dni}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{clearanceLevel}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{String}\PYG{+w}{ }\PYG{n}{cargoAdministrativo}\PYG{p}{)}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{Log}\PYG{p}{.}\PYG{n}{infoln}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Creando empleado con los siguientes valores: \PYGZdq{}}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{cuentaEmpleados}\PYG{o}{++}\PYG{p}{;}
\PYG{+w}{		}\PYG{n}{setName}\PYG{p}{(}\PYG{n}{name}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{setDni}\PYG{p}{(}\PYG{n}{dni}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{setClearanceLevel}\PYG{p}{(}\PYG{n}{clearanceLevel}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{setCargoAdministrativo}\PYG{p}{(}\PYG{n}{cargoAdministrativo}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{c+c1}{// Constructor vacio}
\PYG{+w}{	}\PYG{n}{Empleado}\PYG{p}{()}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{n}{cuentaEmpleados}\PYG{o}{++}\PYG{p}{;}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}

\PYG{+w}{	}\PYG{c+c1}{// Destructor}
\PYG{+w}{	}\PYG{o}{\PYGZti{}}\PYG{n}{Empleado}\PYG{p}{()}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{cuentaEmpleados}\PYG{o}{\PYGZhy{}\PYGZhy{}}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{setLifeStatus}\PYG{p}{(}\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n}{lifeStatus}\PYG{p}{)}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{isAlive}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{lifeStatus}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n}{getLifeStatus}\PYG{p}{()}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{isAlive}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{setName}\PYG{p}{(}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{name}\PYG{p}{)}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{Log}\PYG{p}{.}\PYG{n}{infoln}\PYG{p}{((}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}t}\PYG{l+s}{Setting name to: \PYGZpc{}s \PYGZdq{}}\PYG{p}{),}\PYG{+w}{ }\PYG{n}{name}\PYG{p}{);}
\PYG{+w}{		}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{name}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{name}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{getName}\PYG{p}{()}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{name}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{setDni}\PYG{p}{(}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{dni}\PYG{p}{)}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{Log}\PYG{p}{.}\PYG{n}{infoln}\PYG{p}{((}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}t}\PYG{l+s}{Setting dni to: \PYGZpc{}s \PYGZdq{}}\PYG{p}{),}\PYG{+w}{ }\PYG{n}{dni}\PYG{p}{);}
\PYG{+w}{		}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{dni}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{dni}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{getDni}\PYG{p}{()}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{dni}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{setClearanceLevel}\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{clearanceLevel}\PYG{p}{)}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{Log}\PYG{p}{.}\PYG{n}{infoln}\PYG{p}{((}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}t}\PYG{l+s}{Setting clearanceLevel to: \PYGZpc{}d \PYGZdq{}}\PYG{p}{),}\PYG{+w}{ }\PYG{n}{clearanceLevel}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{();}
\PYG{+w}{		}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{clearanceLevel}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{clearanceLevel}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{getClearanceLevel}\PYG{p}{()}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{clearanceLevel}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{setCargoAdministrativo}\PYG{p}{(}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{cargoAdministrativo}\PYG{p}{)}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{Log}\PYG{p}{.}\PYG{n}{infoln}\PYG{p}{((}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}t}\PYG{l+s}{Setting cargoAdministrativo to: \PYGZpc{}s \PYGZdq{}}\PYG{p}{),}\PYG{+w}{ }\PYG{n}{cargoAdministrativo}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{();}
\PYG{+w}{		}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{cargoAdministrativo}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{cargoAdministrativo}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{getCargoAdministrativo}\PYG{p}{()}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{cargoAdministrativo}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{};}
\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{Empleado}\PYG{o}{::}\PYG{n}{cuentaEmpleados}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}

\PYG{c+c1}{// std::vector\PYGZlt{}Empleado\PYGZgt{} Empleados;}
\PYG{c+c1}{// Un array de empleados para almacenar múltiples empleados}
\PYG{c+c1}{// TODO cambiarlo por un vector}
\PYG{c+c1}{// Empleado misEmpleados[20];}
\PYG{n}{Empleado}\PYG{+w}{ }\PYG{n}{miEmpleado}\PYG{p}{;}

\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{ssid}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}TeleCentro\PYGZhy{}882b\PYGZdq{}}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Nombre de la red}
\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{password}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}ZGNJVMMHZ2MY\PYGZdq{}}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Contraseña de la red}
\PYG{n}{AsyncWebServer}\PYG{+w}{ }\PYG{n+nf}{server}\PYG{p}{(}\PYG{l+m+mi}{80}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Inicio el web server en el puerto 80}

\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} Variables del MFRC552 \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZsh{}}
\PYG{c+c1}{// key es una variable que se va a usar a lo largo de todo el codigo}
\PYG{n}{MFRC522}\PYG{o}{::}\PYG{n}{MIFARE\PYGZus{}Key}\PYG{+w}{ }\PYG{n}{key}\PYG{p}{;}
\PYG{c+c1}{// Status es el codigo de estado de autenticacion}
\PYG{n}{MFRC522}\PYG{o}{::}\PYG{n}{StatusCode}\PYG{+w}{ }\PYG{n}{status}\PYG{p}{;}
\PYG{c+c1}{// Defino los pines que van al modulo RC552}
\PYG{n}{MFRC522}\PYG{+w}{ }\PYG{n+nf}{mfrc522}\PYG{p}{(}\PYG{n}{SS\PYGZus{}PIN}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{RST\PYGZus{}PIN}\PYG{p}{);}
\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} FIN DE Variables del MFRC552 \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZsh{}}

\PYG{n}{String}\PYG{+w}{ }\PYG{n+nf}{getUserStringSerialInput}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{setTimeout}\PYG{p}{(}\PYG{l+m+mf}{30000L}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// 30 segundos de timeout}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Enter the data to be written with the \PYGZsq{}*\PYGZsq{} character at the end:}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{));}
\PYG{+w}{	}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{userInput}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{readStringUntil}\PYG{p}{(}\PYG{l+s+sc}{\PYGZsq{}*\PYGZsq{}}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Lee hasta que encuentra un *}
\PYG{+w}{	}\PYG{n}{Log}\PYG{p}{.}\PYG{n}{infoln}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Received the input: \PYGZpc{}s\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{userInput}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Imprimo el input}
\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{userInput}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Devuelvo el input}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{createEmployee}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{c+c1}{//	Empleado* temp = new Empleado(}
\PYG{+w}{	}\PYG{c+c1}{//		getUserStringSerialInput(),}
\PYG{+w}{	}\PYG{c+c1}{//		getUserStringSerialInput(),}
\PYG{+w}{	}\PYG{c+c1}{//		4,}
\PYG{+w}{	}\PYG{c+c1}{//		getUserStringSerialInput());}
\PYG{+w}{	}\PYG{c+c1}{// misEmpleados[0] = Empleado(}
\PYG{+w}{	}\PYG{n}{miEmpleado}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{Empleado}\PYG{p}{(}\PYG{+w}{ }\PYG{c+c1}{// Creo un empleado}
\PYG{+w}{		}\PYG{n}{getUserStringSerialInput}\PYG{p}{(),}\PYG{+w}{ }\PYG{c+c1}{// Nombre}
\PYG{+w}{		}\PYG{n}{getUserStringSerialInput}\PYG{p}{(),}\PYG{+w}{ }\PYG{c+c1}{// DNI}
\PYG{+w}{		}\PYG{l+m+mi}{4}\PYG{p}{,}\PYG{+w}{ }\PYG{c+c1}{// Nivel de autorizacion}
\PYG{+w}{		}\PYG{n}{getUserStringSerialInput}\PYG{p}{());}\PYG{+w}{ }\PYG{c+c1}{// Cargo administrativo}
\PYG{p}{\PYGZcb{}}

\PYG{n}{String}\PYG{+w}{ }\PYG{n+nf}{getUID}\PYG{p}{()}\PYG{+w}{ }\PYG{c+c1}{//}
\PYG{c+c1}{// conseguido de https://randomnerdtutorials.com/security\PYGZhy{}access\PYGZhy{}using\PYGZhy{}mfrc522\PYGZhy{}rfid\PYGZhy{}reader\PYGZhy{}with\PYGZhy{}arduino/}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{content}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
\PYG{+w}{	}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{byte}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{uid}\PYG{p}{.}\PYG{n}{size}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{content}\PYG{p}{.}\PYG{n}{concat}\PYG{p}{(}\PYG{n}{String}\PYG{p}{(}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{uid}\PYG{p}{.}\PYG{n}{uidByte}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{l+m+mh}{0x10}\PYG{+w}{ }\PYG{o}{?}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{} 0\PYGZdq{}}\PYG{+w}{ }\PYG{o}{:}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{p}{));}
\PYG{+w}{		}\PYG{n}{content}\PYG{p}{.}\PYG{n}{concat}\PYG{p}{(}\PYG{n}{String}\PYG{p}{(}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{uid}\PYG{p}{.}\PYG{n}{uidByte}\PYG{p}{[}\PYG{n}{i}\PYG{p}{],}\PYG{+w}{ }\PYG{n}{HEX}\PYG{p}{));}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{n}{content}\PYG{p}{.}\PYG{n}{toUpperCase}\PYG{p}{();}
\PYG{+w}{	}\PYG{n}{String}\PYG{+w}{ }\PYG{n}{theUID}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{content}\PYG{p}{.}\PYG{n}{substring}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{theUID}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{readingData}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{c+cm}{/*}
\PYG{c+cm}{	Esta funcion lee la data del tag RFID}
\PYG{c+cm}{	*/}
\PYG{+w}{	}\PYG{c+c1}{// Imprime la información técnica del tag}
\PYG{+w}{	}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PICC\PYGZus{}DumpDetailsToSerial}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{p}{(}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{uid}\PYG{p}{));}

\PYG{+w}{	}\PYG{c+c1}{// Prepara la key, todas las keys estan seteadas a ser FFFFFFFFFFFFh}
\PYG{+w}{	}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{byte}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{l+m+mi}{6}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
\PYG{+w}{		}\PYG{n}{key}\PYG{p}{.}\PYG{n}{keyByte}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mh}{0xFF}\PYG{p}{;}

\PYG{+w}{	}\PYG{c+c1}{// Preparo un buffer para la lectura de informacion.}
\PYG{+w}{	}\PYG{c+c1}{// El tamaño del buffer depende de SIZE\PYGZus{}BUFFER, es un \PYGZsh{}define que esta en la parte de arriba}
\PYG{+w}{	}\PYG{n}{byte}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{SIZE\PYGZus{}BUFFER}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{+w}{ }\PYG{p}{\PYGZcb{};}

\PYG{+w}{	}\PYG{c+c1}{// Defino en que bloque del tag voy a estar trabajando}
\PYG{+w}{	}\PYG{n}{byte}\PYG{+w}{ }\PYG{n}{block}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{;}
\PYG{+w}{	}\PYG{n}{byte}\PYG{+w}{ }\PYG{n}{size}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{SIZE\PYGZus{}BUFFER}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// size va a ser usado para leer luego el bloque}

\PYG{+w}{	}\PYG{c+c1}{// Intenta conectarse con el PICC (Proximity Integrated Circuit Card).}
\PYG{+w}{	}\PYG{c+c1}{// En caso de lograrlo, devuelve STATUS\PYGZus{}OK, segun la inea 750 de MFRC552.cpp}
\PYG{+w}{	}\PYG{n}{status}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PCD\PYGZus{}Authenticate}\PYG{p}{(}\PYG{n}{MFRC522}\PYG{o}{::}\PYG{n}{PICC\PYGZus{}CMD\PYGZus{}MF\PYGZus{}AUTH\PYGZus{}KEY\PYGZus{}A}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{block}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{key}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{p}{(}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{uid}\PYG{p}{));}

\PYG{+w}{	}\PYG{c+c1}{// Intenta comunicarse con el PICC}
\PYG{+w}{	}\PYG{c+c1}{// SI no lo logró, tira el codigo de error y sale de la funcion}
\PYG{+w}{	}\PYG{c+c1}{// Si lo logró, sigue de largo}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{status}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{MFRC522}\PYG{o}{::}\PYG{n}{STATUS\PYGZus{}OK}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Authentication failed: \PYGZdq{}}\PYG{p}{));}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{GetStatusCodeName}\PYG{p}{(}\PYG{n}{status}\PYG{p}{));}
\PYG{+w}{		}\PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{redPin}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HIGH}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{1000}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{redPin}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{LOW}\PYG{p}{);}
\PYG{+w}{		}\PYG{k}{return}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}

\PYG{+w}{	}\PYG{c+c1}{// Intenta leer el bloque n del tag}
\PYG{+w}{	}\PYG{c+c1}{// Si no lo logro, tira codigo de error y sale de la funcion}
\PYG{+w}{	}\PYG{c+c1}{// Si lo logró, va al else}
\PYG{+w}{	}\PYG{n}{status}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{MIFARE\PYGZus{}Read}\PYG{p}{(}\PYG{n}{block}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{size}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{status}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{MFRC522}\PYG{o}{::}\PYG{n}{STATUS\PYGZus{}OK}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Reading failed: \PYGZdq{}}\PYG{p}{));}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{GetStatusCodeName}\PYG{p}{(}\PYG{n}{status}\PYG{p}{));}
\PYG{+w}{		}\PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{redPin}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HIGH}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{1000}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{redPin}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{LOW}\PYG{p}{);}
\PYG{+w}{		}\PYG{k}{return}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{k}{else}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Reading OK\PYGZdq{}}\PYG{p}{));}
\PYG{+w}{		}\PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{greenPin}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HIGH}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{1000}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{greenPin}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{LOW}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}

\PYG{+w}{	}\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} A esta sección de aca solamente se llega despues de que todo salió bien \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}//}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{Data from block [\PYGZdq{}}\PYG{p}{));}
\PYG{+w}{	}\PYG{c+c1}{// Printea el bloque leido}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{block}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}]: \PYGZdq{}}\PYG{p}{));}

\PYG{+w}{	}\PYG{c+c1}{// Printea lo que leyó}
\PYG{+w}{	}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{uint8\PYGZus{}t}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n}{MAX\PYGZus{}SIZE\PYGZus{}BLOCK}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{p}{));}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n+nf}{menu}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{c+c1}{//  TODO: Reemplazar una parte de los contenidos de esta funcion}
\PYG{+w}{	}\PYG{c+c1}{//   con un llamado a getUserSerialInput}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{Elige una opcion\PYGZdq{}}\PYG{p}{));}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}0 \PYGZhy{} Leer data\PYGZdq{}}\PYG{p}{));}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}1 \PYGZhy{} Escribir data}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{));}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}2 \PYGZhy{} leer nombre empleado}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{));}

\PYG{+w}{	}\PYG{c+c1}{// waits while the user does not start data}
\PYG{+w}{	}\PYG{k}{while}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{available}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{p}{\PYGZcb{};}

\PYG{+w}{	}\PYG{c+c1}{// retrieves the chosen option}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{op}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{p}{)}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{read}\PYG{p}{();}

\PYG{+w}{	}\PYG{c+c1}{// remove all characters after option (as \PYGZbs{}n per example)}
\PYG{+w}{	}\PYG{k}{while}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{available}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{read}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+s+sc}{\PYGZsq{}\PYGZbs{}n\PYGZsq{}}\PYG{p}{)}
\PYG{+w}{			}\PYG{k}{break}\PYG{p}{;}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{read}\PYG{p}{();}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{op}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{48}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// subtract 48 from read value, 48 is the zero from ascii table}
\PYG{p}{\PYGZcb{}}

\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{+w}{ }\PYG{n}{index\PYGZus{}html}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{PROGMEM}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s+sa}{R}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+dl}{rawliteral(}
\PYG{l+s}{\PYGZlt{}!DOCTYPE html\PYGZgt{}}
\PYG{l+s}{\PYGZlt{}html\PYGZgt{}}
\PYG{l+s}{	\PYGZlt{}head\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}meta name=\PYGZdq{}viewport\PYGZdq{} content=\PYGZdq{}width=device\PYGZhy{}width, initial\PYGZhy{}scale=1\PYGZdq{} /\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}link}
\PYG{l+s}{			rel=\PYGZdq{}stylesheet\PYGZdq{}}
\PYG{l+s}{			href=\PYGZdq{}https://use.fontawesome.com/releases/v5.7.2/css/all.css\PYGZdq{}}
\PYG{l+s}{			integrity=\PYGZdq{}sha384\PYGZhy{}fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\PYGZdq{}}
\PYG{l+s}{			crossorigin=\PYGZdq{}anonymous\PYGZdq{}}
\PYG{l+s}{		/\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}style\PYGZgt{}}
\PYG{l+s}{			html \PYGZob{}}
\PYG{l+s}{				font\PYGZhy{}family: Arial;}
\PYG{l+s}{				display: inline\PYGZhy{}block;}
\PYG{l+s}{				margin: 0px auto;}
\PYG{l+s}{				text\PYGZhy{}align: center;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{			h2 \PYGZob{}}
\PYG{l+s}{				font\PYGZhy{}size: 3rem;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{			p \PYGZob{}}
\PYG{l+s}{				font\PYGZhy{}size: 3rem;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{			.units \PYGZob{}}
\PYG{l+s}{				font\PYGZhy{}size: 1.2rem;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{			.dht\PYGZhy{}labels \PYGZob{}}
\PYG{l+s}{				font\PYGZhy{}size: 1.5rem;}
\PYG{l+s}{				vertical\PYGZhy{}align: middle;}
\PYG{l+s}{				padding\PYGZhy{}bottom: 15px;}
\PYG{l+s}{			\PYGZcb{}}
\PYG{l+s}{		\PYGZlt{}/style\PYGZgt{}}
\PYG{l+s}{	\PYGZlt{}/head\PYGZgt{}}
\PYG{l+s}{	\PYGZlt{}body\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}h2\PYGZgt{}ESP32 DHT Server\PYGZlt{}/h2\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}p\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}i class=\PYGZdq{}fas fa\PYGZhy{}thermometer\PYGZhy{}half\PYGZdq{} style=\PYGZdq{}color: \PYGZsh{}059e8a\PYGZdq{}\PYGZgt{}\PYGZlt{}/i\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span class=\PYGZdq{}dht\PYGZhy{}labels\PYGZdq{}\PYGZgt{}Temperature is: \PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span id=\PYGZdq{}temperature\PYGZdq{}\PYGZgt{}\PYGZpc{}TEMPERATURE\PYGZpc{}\PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}sup class=\PYGZdq{}units\PYGZdq{}\PYGZgt{}\PYGZam{}deg;C\PYGZlt{}/sup\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}/p\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}p\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}i class=\PYGZdq{}fas fa\PYGZhy{}tint\PYGZdq{} style=\PYGZdq{}color: \PYGZsh{}00add6\PYGZdq{}\PYGZgt{}\PYGZlt{}/i\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span class=\PYGZdq{}dht\PYGZhy{}labels\PYGZdq{}\PYGZgt{}Humidity is: \PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}span id=\PYGZdq{}humidity\PYGZdq{}\PYGZgt{}\PYGZpc{}HUMIDITY\PYGZpc{}\PYGZlt{}/span\PYGZgt{}}
\PYG{l+s}{			\PYGZlt{}sup class=\PYGZdq{}units\PYGZdq{}\PYGZgt{}\PYGZam{}percnt;\PYGZlt{}/sup\PYGZgt{}}
\PYG{l+s}{		\PYGZlt{}/p\PYGZgt{}}
\PYG{l+s}{	\PYGZlt{}/body\PYGZgt{}}
\PYG{l+s}{	\PYGZlt{}script\PYGZgt{}}
\PYG{l+s}{		setInterval(function () \PYGZob{}}
\PYG{l+s}{			var xhttp = new XMLHttpRequest();}
\PYG{l+s}{			xhttp.onreadystatechange = function () \PYGZob{}}
\PYG{l+s}{				if (this.readyState == 4 \PYGZam{}\PYGZam{} this.status == 200) \PYGZob{}}
\PYG{l+s}{					document.getElementById(\PYGZdq{}temperature\PYGZdq{}).innerHTML = this.responseText;}
\PYG{l+s}{				\PYGZcb{}}
\PYG{l+s}{			\PYGZcb{};}
\PYG{l+s}{			xhttp.open(\PYGZdq{}GET\PYGZdq{}, \PYGZdq{}/temperature\PYGZdq{}, true);}
\PYG{l+s}{			xhttp.send();}
\PYG{l+s}{		\PYGZcb{}, 10000);}

\PYG{l+s}{		setInterval(function () \PYGZob{}}
\PYG{l+s}{			var xhttp = new XMLHttpRequest();}
\PYG{l+s}{			xhttp.onreadystatechange = function () \PYGZob{}}
\PYG{l+s}{				if (this.readyState == 4 \PYGZam{}\PYGZam{} this.status == 200) \PYGZob{}}
\PYG{l+s}{					document.getElementById(\PYGZdq{}humidity\PYGZdq{}).innerHTML = this.responseText;}
\PYG{l+s}{				\PYGZcb{}}
\PYG{l+s}{			\PYGZcb{};}
\PYG{l+s}{			xhttp.open(\PYGZdq{}GET\PYGZdq{}, \PYGZdq{}/humidity\PYGZdq{}, true);}
\PYG{l+s}{			xhttp.send();}
\PYG{l+s}{		\PYGZcb{}, 10000);}
\PYG{l+s}{	\PYGZlt{}/script\PYGZgt{}}
\PYG{l+s}{\PYGZlt{}/html\PYGZgt{}}\PYG{l+s+dl}{)rawliteral}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}

\PYG{n}{String}\PYG{+w}{ }\PYG{n+nf}{processor}\PYG{p}{(}\PYG{k}{const}\PYG{+w}{ }\PYG{n}{String}\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{n}{var}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{var}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{var}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}TEMPERATURE\PYGZdq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{String}\PYG{p}{(}\PYG{n}{random}\PYG{p}{(}\PYG{l+m+mi}{10}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{25}\PYG{p}{));}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{k}{else}\PYG{+w}{ }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{var}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}HUMIDITY\PYGZdq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{String}\PYG{p}{(}\PYG{n}{random}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{50}\PYG{p}{));}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{k}{else}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}hola\PYGZdq{}}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{setup}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{(}\PYG{l+m+mi}{9600}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{SPI}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{();}\PYG{+w}{ }\PYG{c+c1}{// Inicio el bus SPI}
\PYG{+w}{	}\PYG{n}{Log}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{(}\PYG{n}{LOG\PYGZus{}LEVEL\PYGZus{}NOTICE}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{Serial}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Inicio del sistema de logging}

\PYG{+w}{	}\PYG{c+c1}{// Prendo el led de la placa cuando inicia el sistema}
\PYG{+w}{	}\PYG{n}{pinMode}\PYG{p}{(}\PYG{n}{LED\PYGZus{}BUILTIN}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{OUTPUT}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{LED\PYGZus{}BUILTIN}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HIGH}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{1000}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{LED\PYGZus{}BUILTIN}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{LOW}\PYG{p}{);}

\PYG{+w}{	}\PYG{c+c1}{// Connect to Wi\PYGZhy{}Fi}
\PYG{+w}{	}\PYG{n}{WiFi}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{(}\PYG{n}{ssid}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{password}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{while}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{WiFi}\PYG{p}{.}\PYG{n}{status}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{WL\PYGZus{}CONNECTED}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{1000}\PYG{p}{);}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Connecting to WiFi..\PYGZdq{}}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}

\PYG{+w}{	}\PYG{c+c1}{// Print ESP32 Local IP Address}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{WiFi}\PYG{p}{.}\PYG{n}{localIP}\PYG{p}{());}

\PYG{+w}{	}\PYG{c+c1}{// Route for root / web page}
\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{on}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HTTP\PYGZus{}GET}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[](}\PYG{n}{AsyncWebServerRequest}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{request}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{send\PYGZus{}P}\PYG{p}{(}\PYG{l+m+mi}{200}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}text/html\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{index\PYGZus{}html}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{processor}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{});}
\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{on}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/temperature\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HTTP\PYGZus{}GET}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[](}\PYG{n}{AsyncWebServerRequest}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{request}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{send\PYGZus{}P}\PYG{p}{(}\PYG{l+m+mi}{200}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}text/plain\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{String}\PYG{p}{(}\PYG{n}{random}\PYG{p}{(}\PYG{l+m+mi}{10}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{25}\PYG{p}{)).}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
\PYG{+w}{	}\PYG{p}{\PYGZcb{});}
\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{on}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/humidity\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HTTP\PYGZus{}GET}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[](}\PYG{n}{AsyncWebServerRequest}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{request}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{send\PYGZus{}P}\PYG{p}{(}\PYG{l+m+mi}{200}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}text/plain\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{String}\PYG{p}{(}\PYG{n}{random}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{50}\PYG{p}{)).}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
\PYG{+w}{	}\PYG{p}{\PYGZcb{});}
\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{on}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/hour\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{HTTP\PYGZus{}GET}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{[](}\PYG{n}{AsyncWebServerRequest}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{request}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{request}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{send\PYGZus{}P}\PYG{p}{(}\PYG{l+m+mi}{200}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}text/plain\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{String}\PYG{p}{(}\PYG{n}{get\PYGZus{}hour}\PYG{p}{()).}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
\PYG{+w}{	}\PYG{p}{\PYGZcb{});}
\PYG{+w}{	}\PYG{n}{server}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{();}

\PYG{+w}{	}\PYG{c+c1}{// Inicio el MFRC552}
\PYG{+w}{	}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PCD\PYGZus{}Init}\PYG{p}{();}
\PYG{+w}{	}\PYG{c+c1}{// Le pido al usuario que acerque el tag RFID}
\PYG{+w}{	}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Acerca tu tarjeta RFID}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{));}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{loop}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{c+c1}{// Se espera a que se acerque un tag}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PICC\PYGZus{}IsNewCardPresent}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{c+c1}{// Se espera a que se lean los datos}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PICC\PYGZus{}ReadCardSerial}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{return}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{c+c1}{// Descomentar solamente si se quiere Dumpear toda la info acerca de la tarjeta leida}
\PYG{+w}{	}\PYG{c+c1}{// Ojo que llama automaticamente a PICC\PYGZus{}HaltA()}
\PYG{+w}{	}\PYG{c+c1}{// mfrc522.PICC\PYGZus{}DumpToSerial(\PYGZam{}(mfrc522.uid));}

\PYG{+w}{	}\PYG{c+c1}{// LLama a la funcion de menu para que el usuario elija una opcion}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{op}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{menu}\PYG{p}{();}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{op}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{)}
\PYG{+w}{		}\PYG{n}{readingData}\PYG{p}{();}
\PYG{+w}{	}\PYG{k}{else}\PYG{+w}{ }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{op}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{c+c1}{// crear empleado}
\PYG{+w}{		}\PYG{n}{createEmployee}\PYG{p}{();}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{k}{else}\PYG{+w}{ }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{op}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{c+c1}{// leer info del primer empleado}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{The employee name is: \PYGZdq{}}\PYG{p}{);}
\PYG{+w}{		}\PYG{c+c1}{// Serial.print(misEmpleados[0].getName());}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{miEmpleado}\PYG{p}{.}\PYG{n}{getName}\PYG{p}{());}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}

\PYG{+w}{	}\PYG{k}{else}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{F}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Incorrect Option!\PYGZdq{}}\PYG{p}{));}
\PYG{+w}{		}\PYG{k}{return}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}

\PYG{+w}{	}\PYG{c+c1}{// Le dice al PICC que se vaya a un estado de STOP cuando esta activo (o sea, lo haltea)}
\PYG{+w}{	}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PICC\PYGZus{}HaltA}\PYG{p}{();}

\PYG{+w}{	}\PYG{c+c1}{// Esto \PYGZdq{}para\PYGZdq{} la encriptación del PCD (proximity coupling device).}
\PYG{+w}{	}\PYG{c+c1}{// Tiene que ser llamado si o si despues de la comunicacion con una}
\PYG{+w}{	}\PYG{c+c1}{// autenticación exitosa, en otro caso no se va a poder iniciar otra comunicación.}
\PYG{+w}{	}\PYG{n}{mfrc522}\PYG{p}{.}\PYG{n}{PCD\PYGZus{}StopCrypto1}\PYG{p}{();}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
